
const config = {
  delay: 2000,          // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏
  scrollStep: 600,      // –†–∞–∑–º–µ—Ä –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ (—É–≤–µ–ª–∏—á–µ–Ω–æ)
  maxTracks: 100,       // –ú–∞–∫—Å–∏–º—É–º —Ç—Ä–µ–∫–æ–≤
  scrollAttempts: 5     // –ü–æ–ø—ã—Ç–æ–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø–µ—Ä–µ–¥ –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π
};

let state = {
  processed: new Set(),
  scrollCounter: 0,
  lastPosition: 0
};

// –£–º–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
async function smartScroll() {
  const startPos = window.pageYOffset;
  window.scrollBy(0, config.scrollStep);
  
  return new Promise(resolve => {
    setTimeout(() => {
      const scrolled = window.pageYOffset > startPos;
      console.log(scrolled ? '–ü—Ä–æ–∫—Ä—É—Ç–∫–∞ —É—Å–ø–µ—à–Ω–∞' : '–ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞');
      resolve(scrolled);
    }, 1000);
  });
}

// –ü–æ–∏—Å–∫ –∫–Ω–æ–ø–æ–∫ —Å —É—á–µ—Ç–æ–º –≤–∏–¥–∏–º–æ—Å—Ç–∏
function findVisibleButtons() {
  return Array.from(
    document.querySelectorAll('button[aria-label*="npasurca"], button[aria-label*="–Ω—Ä–∞–≤–∏—Ç—Å—è"]')
  ).filter(btn => {
    const rect = btn.getBoundingClientRect();
    return rect.width > 0 && rect.height > 0;
  });
}

// –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
async function processTracks() {
  if (state.processed.size >= config.maxTracks) {
    console.log('‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ:', state.processed.size);
    return;
  }

  // 1. –ü–æ–∏—Å–∫ –∫–Ω–æ–ø–æ–∫
  const buttons = findVisibleButtons();
  const newButtons = buttons.filter(btn => !state.processed.has(btn));

  // 2. –ï—Å–ª–∏ –µ—Å—Ç—å —á—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å
  if (newButtons.length > 0) {
    newButtons[0].click();
    state.processed.add(newButtons[0]);
    state.scrollCounter = 0;
    console.log(`‚ôªÔ∏è –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${state.processed.size}/${config.maxTracks}`);
    
    await new Promise(r => setTimeout(r, config.delay));
    return processTracks();
  }

  // 3. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
  if (state.scrollCounter < config.scrollAttempts) {
    const scrolled = await smartScroll();
    state.scrollCounter = scrolled ? 0 : state.scrollCounter + 1;
    await new Promise(r => setTimeout(r, config.delay));
    return processTracks();
  }

  console.log('‚ö†Ô∏è –ü—Ä–µ–∫—Ä–∞—â–∞—é: –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–µ —Ç—Ä–µ–∫–∏');
}

// –ó–∞–ø—É—Å–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
function init() {
  console.log('üîç –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  if (findVisibleButtons().length === 0) {
    console.warn('–ö–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:');
    console.warn('1. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–æ—è –≤–æ–ª–Ω–∞" –∏–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç–µ');
    console.warn('2. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å');
    return;
  }
  
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏...');
  processTracks();
}

// –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫
setTimeout(init, 2000);